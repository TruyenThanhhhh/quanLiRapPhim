// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quanLiRapPhim.Data;

#nullable disable

namespace quanLiRapPhim.Migrations
{
    [DbContext(typeof(quanLiRapPhimContext))]
    [Migration("20250425063002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("quanLiRapPhim.Models.DonHang", b =>
                {
                    b.Property<int>("MaVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVe"));

                    b.Property<float>("GiaVe")
                        .HasColumnType("real");

                    b.Property<int>("IDNhanVien")
                        .HasColumnType("int");

                    b.Property<int?>("IDThongKe")
                        .HasColumnType("int");

                    b.Property<int>("MaGhe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhimId")
                        .HasColumnType("int");

                    b.Property<int>("PhongChieuId")
                        .HasColumnType("int");

                    b.Property<int>("XuatChieuId")
                        .HasColumnType("int");

                    b.HasKey("MaVe");

                    b.HasIndex("IDNhanVien");

                    b.HasIndex("IDThongKe");

                    b.HasIndex("PhimId");

                    b.HasIndex("PhongChieuId");

                    b.HasIndex("XuatChieuId");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.NhanVien", b =>
                {
                    b.Property<int>("IDNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDNhanVien"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDNhanVien");

                    b.HasIndex("Username");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.Phim", b =>
                {
                    b.Property<int>("PhimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhimID"));

                    b.Property<string>("DaoDien")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GioiHanDoTuoi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TheLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PhimID");

                    b.ToTable("Phim");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.PhongChieu", b =>
                {
                    b.Property<int>("PhongID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhongID"));

                    b.Property<int>("SoGhe")
                        .HasColumnType("int");

                    b.HasKey("PhongID");

                    b.ToTable("PhongChieu");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.QuanLy", b =>
                {
                    b.Property<int>("IDQuanLy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDQuanLy"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDQuanLy");

                    b.HasIndex("Username");

                    b.ToTable("QuanLy");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.TaiKhoan", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoChungMinh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Username");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.ThongKe", b =>
                {
                    b.Property<int>("IDThongKe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDThongKe"));

                    b.Property<decimal>("DoanhThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayTK")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuyTK")
                        .HasColumnType("int");

                    b.Property<int>("ThangTK")
                        .HasColumnType("int");

                    b.HasKey("IDThongKe");

                    b.ToTable("ThongKe");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.XuatChieu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("GioChieu")
                        .HasColumnType("datetime2");

                    b.Property<float?>("KhuyenMai")
                        .HasColumnType("real");

                    b.Property<int>("PhongID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PhongID");

                    b.ToTable("XuatChieu");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.DonHang", b =>
                {
                    b.HasOne("quanLiRapPhim.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("IDNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quanLiRapPhim.Models.ThongKe", "ThongKe")
                        .WithMany()
                        .HasForeignKey("IDThongKe");

                    b.HasOne("quanLiRapPhim.Models.Phim", "Phim")
                        .WithMany()
                        .HasForeignKey("PhimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quanLiRapPhim.Models.PhongChieu", "PhongChieu")
                        .WithMany("DonHangs")
                        .HasForeignKey("PhongChieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quanLiRapPhim.Models.XuatChieu", "XuatChieu")
                        .WithMany("DonHangs")
                        .HasForeignKey("XuatChieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("Phim");

                    b.Navigation("PhongChieu");

                    b.Navigation("ThongKe");

                    b.Navigation("XuatChieu");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.NhanVien", b =>
                {
                    b.HasOne("quanLiRapPhim.Models.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.QuanLy", b =>
                {
                    b.HasOne("quanLiRapPhim.Models.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.XuatChieu", b =>
                {
                    b.HasOne("quanLiRapPhim.Models.PhongChieu", "PhongChieu")
                        .WithMany("XuatChieus")
                        .HasForeignKey("PhongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhongChieu");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.PhongChieu", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("XuatChieus");
                });

            modelBuilder.Entity("quanLiRapPhim.Models.XuatChieu", b =>
                {
                    b.Navigation("DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
